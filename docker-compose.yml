version: "3.9"

services:
  express-app-admin:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: express-app-admin
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      NODE_ENV: development
      PORT: 5000
    env_file:
      - ./server/.env        # remove if not used
    # Your Dockerfile already sets WORKDIR /usr/src/app
    volumes:
      - ./server:/usr/src/app            # hot reload code
      - /usr/src/app/node_modules        # keep container's node_modules
    networks:
      - networkName
    # No command needed: Dockerfile CMD ["npm","run","dev"] is used

networks:
  networkName:
    driver: bridge


# version: "3.9"

# networks:
#   web:
#     driver: bridge

# volumes:
#   letsencrypt:
#   certbot_www:

# services:
#   app1:
#     build:
#       context: ./server
#       dockerfile: Dockerfile
#     container_name: express-app-admin-1
#     restart: unless-stopped
#     working_dir: /usr/src/app
#     environment:
#       NODE_ENV: production
#       PORT: "5000"
#       GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/serviceAccountKey.json
#     volumes:
#       - ./secrets/serviceAccountKey.json:/run/secrets/serviceAccountKey.json:ro
#     expose:
#       - "5000"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 5s
#       retries: 3
#     networks: [web]

#   app2:
#     build:
#       context: ./server
#       dockerfile: Dockerfile
#     container_name: express-app-admin-2
#     restart: unless-stopped
#     working_dir: /usr/src/app
#     environment:
#       NODE_ENV: production
#       PORT: "5000"
#       GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/serviceAccountKey.json
#     volumes:
#       - ./secrets/serviceAccountKey.json:/run/secrets/serviceAccountKey.json:ro
#     expose:
#       - "5000"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 5s
#       retries: 3
#     networks: [web]

#   app3:
#     build:
#       context: ./server
#       dockerfile: Dockerfile
#     container_name: express-app-admin-3
#     restart: unless-stopped
#     working_dir: /usr/src/app
#     environment:
#       NODE_ENV: production
#       PORT: "5000"
#       GOOGLE_APPLICATION_CREDENTIALS: /run/secrets/serviceAccountKey.json
#     volumes:
#       - ./secrets/serviceAccountKey.json:/run/secrets/serviceAccountKey.json:ro
#     expose:
#       - "5000"
#     healthcheck:
#       test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
#       interval: 30s
#       timeout: 5s
#       retries: 3
#     networks: [web]

#   nginx:
#     image: nginx:1.27
#     container_name: nginx
#     depends_on:
#       - app1
#       - app2
#       - app3
#     restart: unless-stopped
#     ports:
#       - "80:80"
#       - "443:443"
#     volumes:
#       - ./nginx/conf.d:/etc/nginx/conf.d:ro
#       - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
#       - letsencrypt:/etc/letsencrypt
#       - certbot_www:/var/www/certbot
#     networks: [web]

#   certbot:
#     image: certbot/certbot:latest
#     entrypoint: sh
#     command: -c "trap : TERM INT; sleep infinity"
#     volumes:
#       - letsencrypt:/etc/letsencrypt
#       - certbot_www:/var/www/certbot
#     networks: [web]





