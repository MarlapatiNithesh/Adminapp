server {
  listen 80 default_server;
  server_name _;

  # Connection limit per client IP
  limit_conn perip 40;

  # -------- Health checks / no rate limit / no cache --------
  location = /nginx-health {
    add_header Content-Type text/plain;
    return 200 'ok';
  }

  location = /health {
    proxy_pass http://app_upstream;
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 15s;

    # never cache health
    proxy_no_cache 1;
    proxy_cache_bypass 1;
  }

  # -------- API: stricter rate limit --------
  location ^~ /api {
    # 5 req/s with short burst; drop excess immediately
    limit_req zone=api_limit_strict burst=10 nodelay;

    proxy_pass http://app_upstream;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;

    # Caching: GET/HEAD only, bypass when authenticated/POST/session cookie
    proxy_cache           STATICCACHE;
    proxy_cache_methods   GET HEAD;
    proxy_no_cache        $skip_cache;
    proxy_cache_bypass    $skip_cache;

    # cache key & validity
    proxy_cache_key       "$scheme$request_method$host$request_uri";
    proxy_cache_valid     200 301 302 10m;
    proxy_cache_valid     404 1m;

    # helpful headers
    add_header X-Cache-Status $upstream_cache_status always;
    add_header Cache-Control "public, max-age=60" always;
  }

  # -------- Everything else: global rate limit + cache --------
  location / {
    # 10 req/s per IP with burst; drop excess
    limit_req zone=api_limit burst=20 nodelay;

    proxy_pass http://app_upstream;
    proxy_http_version 1.1;
    proxy_set_header Connection "";
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_read_timeout 60s;

    proxy_cache           STATICCACHE;
    proxy_cache_methods   GET HEAD;
    proxy_no_cache        $skip_cache;
    proxy_cache_bypass    $skip_cache;

    proxy_cache_key       "$scheme$request_method$host$request_uri";
    proxy_cache_valid     200 301 302 10m;
    proxy_cache_valid     404 1m;

    add_header X-Cache-Status $upstream_cache_status always;
    add_header Cache-Control "public, max-age=60" always;
  }
}

