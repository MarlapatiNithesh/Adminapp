# /etc/nginx/conf.d/app.conf
upstream app_upstream {
    # Round-robin load balancing across your three Express apps
    server express-app-admin-1:5000;
    server express-app-admin-2:5000;
    server express-app-admin-3:5000;
}

server {
    listen 80;
    listen [::]:80;
    server_name _;   # accept any host or direct IP

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header X-XSS-Protection "1; mode=block" always;

    # Rate/connection limits (zones defined in nginx.conf http{})
    limit_req  zone=api_limit burst=20 nodelay;
    limit_conn perip 40;

    # Caching (safe GETs; cache zone defined in nginx.conf)
    proxy_cache        STATICCACHE;
    proxy_cache_lock   on;
    proxy_cache_valid  200 10m;
    proxy_cache_valid  404 1m;

    # Nginx health endpoint
    location = /health {
        access_log off;
        add_header Content-Type text/plain;
        return 200 "OK\n";
    }

    location / {
        proxy_http_version 1.1;

        # Standard proxy headers
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSockets support
        proxy_set_header Upgrade    $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Bypass cache for non-idempotent/authenticated requests
        proxy_no_cache     $skip_cache;
        proxy_cache_bypass $skip_cache;

        proxy_read_timeout 60s;
        proxy_send_timeout 60s;

        # Load-balanced backend
        proxy_pass http://app_upstream;
    }
}
