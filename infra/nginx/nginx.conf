
user  nginx;
worker_processes  auto;

events { worker_connections 4096; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  sendfile on; tcp_nopush on; tcp_nodelay on; keepalive_timeout 65;

  # gzip
  gzip on; gzip_vary on; gzip_min_length 1024; gzip_proxied any;
  gzip_types text/plain text/css application/json application/javascript application/xml text/xml text/javascript image/svg+xml;

  # cache (safe GETs)
  proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=STATICCACHE:20m max_size=1g inactive=7d use_temp_path=off;
  proxy_cache_key "$scheme$request_method$host$request_uri";

  # rate limiting zones
  limit_req_zone  $binary_remote_addr zone=api_limit:10m rate=10r/s;
  limit_conn_zone $binary_remote_addr zone=perip:10m;

  # upstream pool (Docker service names)
  upstream app_upstream {
    least_conn;
    server express-app-admin-1:5000 max_fails=3 fail_timeout=5s;
    server express-app-admin-2:5000 max_fails=3 fail_timeout=5s;
    server express-app-admin-3:5000 max_fails=3 fail_timeout=5s;
    keepalive 64;
  }

  # cache-bypass maps (must be in http{})
  map $request_method $bypass_post   { default 0; POST 1; }
  map $http_authorization $bypass_auth { default 0; ~.+ 1; }
  map $cookie_session $bypass_cookie { default 0; ~.+ 1; }
  map "$bypass_post$bypass_auth$bypass_cookie" $skip_cache { default 0; ~[1] 1; }

  # WebSocket helper (used in server/location)
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  include /etc/nginx/conf.d/*.conf;
}
