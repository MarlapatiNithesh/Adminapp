version: "3.9"

services:
  express-app-admin-1:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: express-app-admin-1
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
    env_file:
      - ./server/.env
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    expose:
      - "5000"
    networks:
      - networkName

  express-app-admin-2:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: express-app-admin-2
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
    env_file:
      - ./server/.env
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    expose:
      - "5000"
    networks:
      - networkName

  express-app-admin-3:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: express-app-admin-3
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 5000
    env_file:
      - ./server/.env
    volumes:
      - ./server:/usr/src/app
      - /usr/src/app/node_modules
    expose:
      - "5000"
    networks:
      - networkName

  nginx:
    image: nginx:latest
    container_name: nginx
    depends_on:
      - express-app-admin-1
      - express-app-admin-2
      - express-app-admin-3
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot
      - nginx_cache:/var/cache/nginx
    networks:
      - networkName

  certbot:
    image: certbot/certbot:latest
    entrypoint: sh
    command: -c "trap : TERM INT; sleep infinity"
    volumes:
      - letsencrypt:/etc/letsencrypt
      - certbot_www:/var/www/certbot
    networks:
      - networkName

networks:
  networkName:
    driver: bridge

volumes:
  letsencrypt:
  certbot_www:
  nginx_cache:







