services:
  nginx:
    image: "nginx:1.25"
    container_name: nginx
    init: true
    restart: unless-stopped
    depends_on:
      express-app-admin-1:
        condition: service_started
      express-app-admin-2:
        condition: service_started
      express-app-admin-3:
        condition: service_started
    ports:
      - "80:80"
      # - "443:443"   # enable when certs ready
    volumes:
      - type: bind
        source: ./nginx/conf.d
        target: /etc/nginx/conf.d
        read_only: true
      - type: bind
        source: ./nginx/nginx.conf
        target: /etc/nginx/nginx.conf
        read_only: true
      - type: volume
        source: nginx_cache
        target: /var/cache/nginx
      # Kept for future HTTPS; safe to keep mounted
      - type: volume
        source: letsencrypt
        target: /etc/letsencrypt
      - type: volume
        source: certbot_www
        target: /var/www/certbot
    healthcheck:
      test: ["CMD-SHELL", "nginx -t -q || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 5
      start_period: 10s
    stop_grace_period: 10s
    networks: [app-net]

  express-app-admin-1:
    image: "nitheesh2005/admin-app:latest"
    container_name: express-app-admin-1
    init: true
    restart: unless-stopped
    environment:
      NODE_ENV: "production"
      PORT: "5000"
    expose: ["5000"]
    healthcheck:
      test:
        - CMD-SHELL
        - >
          node -e "
            const http=require('http');
            const req=http.get('http://127.0.0.1:5000/health',res=>process.exit(res.statusCode===200?0:1));
            req.on('error',()=>process.exit(1));
          "
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 40s
    stop_grace_period: 10s
    networks: [app-net]

  express-app-admin-2:
    image: "nitheesh2005/admin-app:latest"
    container_name: express-app-admin-2
    init: true
    restart: unless-stopped
    environment:
      NODE_ENV: "production"
      PORT: "5000"
    expose: ["5000"]
    healthcheck:
      test:
        - CMD-SHELL
        - >
          node -e "
            const http=require('http');
            const req=http.get('http://127.0.0.1:5000/health',res=>process.exit(res.statusCode===200?0:1));
            req.on('error',()=>process.exit(1));
          "
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 40s
    stop_grace_period: 10s
    networks: [app-net]

  express-app-admin-3:
    image: "nitheesh2005/admin-app:latest"
    container_name: express-app-admin-3
    init: true
    restart: unless-stopped
    environment:
      NODE_ENV: "production"
      PORT: "5000"
    expose: ["5000"]
    healthcheck:
      test:
        - CMD-SHELL
        - >
          node -e "
            const http=require('http');
            const req=http.get('http://127.0.0.1:5000/health',res=>process.exit(res.statusCode===200?0:1));
            req.on('error',()=>process.exit(1));
          "
      interval: 15s
      timeout: 5s
      retries: 20
      start_period: 40s
    stop_grace_period: 10s
    networks: [app-net]

  # HTTP-only: leave certbot disabled (uncomment when moving to HTTPS)
  # certbot:
  #   image: "certbot/certbot:latest"
  #   entrypoint: "sh"
  #   command: ["-c", "trap : TERM INT; sleep infinity"]
  #   volumes:
  #     - type: volume
  #       source: letsencrypt
  #       target: /etc/letsencrypt
  #     - type: volume
  #       source: certbot_www
  #       target: /var/www/certbot
  #   networks: [app-net]

networks:
  app-net:
    driver: bridge

volumes:
  letsencrypt: {}
  certbot_www: {}
  nginx_cache: {}




